import shouldCollapse from "@parameter1/base-web-marko-utils/should-collapse";

import AllAuthorContent from "./all-author-content";
import AllCompanyContent from "./all-company-content";
import AllPublishedContent from "./all-published-content";
import Content from "./content";
import DynamicPage from "./dynamic-page";
import MagazineActiveIssues from "./magazine-active-issues";
import MagazineIssue from "./magazine-issue";
import MagazineLatestIssue from "./magazine-latest-issue";
import MagazinePublication from "./magazine-publication";
import MagazinePublications from "./magazine-publications";
import MagazineScheduledContent from "./magazine-scheduled-content";
import MostPopularContent from "./most-popular-content";
import NewsletterScheduledContent from "./newsletter-scheduled-content";
import RelatedPublishedContent from "./related-published-content";
import WebsiteSection from "./website-section";
import WebsiteScheduledContent from "./website-scheduled-content";

$ const map = {
  "all-author-content": AllAuthorContent,
  "all-company-content": AllCompanyContent,
  "all-published-content": AllPublishedContent,
  "content": Content,
  "dynamic-page": DynamicPage,
  "magazine-active-issues": MagazineActiveIssues,
  "magazine-issue": MagazineIssue,
  "magazine-latest-issue": MagazineLatestIssue,
  "magazine-publication": MagazinePublication,
  "magazine-publications": MagazinePublications,
  "magazine-scheduled-content": MagazineScheduledContent,
  "most-popular-content": MostPopularContent,
  "newsletter-scheduled-content": NewsletterScheduledContent,
  "related-published-content": RelatedPublishedContent,
  "website-section": WebsiteSection,
  "website-scheduled-content": WebsiteScheduledContent,
};

$ const collapsible = shouldCollapse(input.collapsible);
$ const Component = map[input.name];

<if(Component)>
  <${Component}|data| ...input.params>
    $ const { nodes, node } = data;
    <if(nodes)>
      <if(nodes.length || !collapsible)>
        <${input.renderBody} ...data />
      </if>
      <else>
        <${input.whenEmpty} />
      </else>
    </if>
    <else-if(node || !collapsible)>
      <${input.renderBody} ...data />
    </else-if>
    <else>
      <${input.whenEmpty} />
    </else>
  </>
</if>
<else>
  $ process.emitWarning(`Unable to execute query: no component was found for '${input.name}'`);
</else>
